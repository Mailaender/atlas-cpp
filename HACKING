Read this carefully before working on Atlas-C++.

I   On writing templates:

 - put the declaration for the template class X in X.h
 - put the definitions for the template class X in X_impl.h
 - put any instantiations of X in X.cpp (or X.cc?), e.g.:
     template class X<int>;

This avoids duplicated instantiations and speeds up compile time.
Note that this doesn't apply for absolutely all classes. If unsure,
talk to somebody who knows more about templates.

II  On filenames:

In 0.4.0, C++ implementation filenames will end in .cc.
In 0.4.x, this may change to .cpp.

In 0.4.x:
 - files will have CapitalisedFilenames.extension
 - headers will end in .h

In 0.5.x and up:
 - C++ implementation filenames will end in .cpp
 - headers will end in .h
 - files may be lower cased. This is up to debate.

III On member names:

In 0.4.x member function names will be CapitalisedNames(). There are no
restrictions to the naming of member variables.
In 0.5.x member functions will be lowerThenUpperCased(). Member
variables will be prefixed with m_, and also be lowerThenUpperCased.
-------e.g.
0.4.x: class Budgie { void CleanFeathers(); Feather* dirty_feathers; };
0.5.x: class Budgie { void cleanFeathers(); Feather* m_dirtyFeathers; };
-----------

IV  On ChangeLog entries:

Write a change log entry for every change you check in. Make sure you
use standard ChangeLog format. Look in the current ChangeLog for
examples of this.

Written by Stefanus Du Toit <sjdutoit@uwaterloo.ca> on 2001-01-14.
Last updated by Stefanus Du Toit <sjdutoit@uwaterloo.ca> on 2001-01-23.
